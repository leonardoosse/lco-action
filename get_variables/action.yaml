name: 'Clean Application'

inputs:  
  ENVIRONMENT:
    type: string
    required: true  
  VARIABLE_TYPE:
    default: all   
    type: choice
    options:
    - all
    - db
    - aws

# outputs:
#   get_vars:
#     description: "Random number"
#     value: ${{ steps.read_file.outputs.variable02 }}

runs:      
  using: "composite"
  steps:

#   - name: Logging
#     shell: bash    
#     run: |
#       echo "${{toJSON(github)}}"

  - name: Get File
    shell: bash  
    env:
      uri: 'https://api.github.com/repos'
      owner: 'leonardoosse'
      repo: 'lco-action'
      path: 'get_variables/variables.csv'
    run: |
      mkdir temp_vars && cd temp_vars
      curl \
        -H 'Authorization: token ${{ github.token }}' \
        -H 'Accept: application/vnd.github.v3.raw' \
        -O \
        -L '${{ env.uri }}/${{ env.owner }}/${{ env.repo }}/contents/${{ env.path }}'      
        
      
  - name: Read File
    if: inputs.VARIABLE_TYPE == 'all'  
#     id: read_file
    shell: bash        
    run: |
      variables=$(jq -Rsn '
        {"variables":
          [inputs
           | . / "\n" 
           | (.[] | select(length > 0) | . / ",") as $input
           | {"env": $input[0], "type": $input[1], "key": $input[2], "value": $input[3]}]}
      ' <temp_vars/variables.csv)

      for variable in $(echo "${variables}" | jq -r '.variables[] | select(.env=="${{ inputs.ENVIRONMENT }}") | @base64'); do
          key=$(echo ${variable} | base64 --decode | jq -r .key)
          value=$(echo ${variable} | base64 --decode | jq -r .value)
          echo "$key: $value"          
          echo "$key=$value" >> $GITHUB_ENV
      done  
      
      rm -R temp_vars    
      
  - name: Read File
    if: inputs.VARIABLE_TYPE != 'all'
#     id: read_file
    shell: bash        
    run: |
      variables=$(jq -Rsn '
        {"variables":
          [inputs
           | . / "\n" 
           | (.[] | select(length > 0) | . / ",") as $input
           | {"env": $input[0], "type": $input[1], "key": $input[2], "value": $input[3]}]}
      ' <temp_vars/variables.csv)

      for variable in $(echo "${variables}" | jq -r '.variables[] | select(.env=="${{ inputs.ENVIRONMENT }}" and .type=="${{ inputs.VARIABLE_TYPE }}") | @base64'); do
          key=$(echo ${variable} | base64 --decode | jq -r .key)
          value=$(echo ${variable} | base64 --decode | jq -r .value)
          echo "$key: $value"          
          echo "$key=$value" >> $GITHUB_ENV
      done  
      
      rm -R temp_vars        
            
      
  - name: Read File
    shell: bash        
    run: |
      echo ${{ env.variable02 }}    

  - name: Sec Value
    shell: bash   
    run: echo "sec_value=valor_secreto" >> $GITHUB_ENV
  - name: Sec Value
    shell: bash       
    run: |
      echo "sec_value: ${{ env.sec_value }}"
#echo "::set-env name=sec_value::${{ secrets[env.sec_value] }}"
  - name: Sec Value
    shell: bash   
    run: |
      echo "sec_value: ${{ env.sec_value }}"
      echo "sec_value: $sec_value"


