name: 'Clean Application'

inputs:  
  ENVIRONMENT:
    type: string
    required: true  
  VARIABLE_TYPE:
    default: all   
    type: choice
    options:
    - all
    - db
    - aws
    
runs:      
  using: "composite"
  steps:

#   - name: Logging
#     shell: bash    
#     run: |
#       echo "${{toJSON(github)}}"

  - name: Get File
    shell: bash  
    env:
      uri: 'https://api.github.com/repos'
      owner: 'leonardoosse'
      repo: 'lco-action'
      path: 'get_variables/variables.csv'
    run: |
      mkdir temp_vars && cd temp_vars
      curl \
        -H 'Authorization: token ${{ github.token }}' \
        -H 'Accept: application/vnd.github.v3.raw' \
        -O \
        -L '${{ env.uri }}/${{ env.owner }}/${{ env.repo }}/contents/${{ env.path }}'      
        
  - name: Logging
    shell: bash    
    run: |
      ls temp_vars
      cat temp_vars/variables.csv
      
  - name: Read File
    shell: bash        
    run: |
      variables=$(jq -Rsn '
        {"variables":
          [inputs
           | . / "\n" 
           | (.[] | select(length > 0) | . / ",") as $input
           | {"env": $input[0], "type": $input[1], "key": $input[2], "value": $input[3]}]}
      ' <temp_vars/variables.csv)

      vars=$(echo "${variables}" | jq '.variables[] | select(.env=="${{ inputs.ENVIRONMENT }}")')  
      echo $vars
      if [[ -n  $vars ]]; then 
        echo "true"
        
        echo ::set-output name=variables::{\"include\":$vars}
        echo $applications
        
        #echo "sast_upload=$(echo $repository | jq -r .sast_upload)" >> $GITHUB_ENV
        #echo "sca=$(echo $repository | jq -r .sca)" >> $GITHUB_ENV        
      fi        
      rm -R temp_vars           
      
